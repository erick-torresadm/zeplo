Perfeito, agora estamos chegando l√°! üëá Bora fazer esse fluxo disparar certinho quando algu√©m enviar uma palavra-chave.

---

### ‚úÖ RESUMO DO OBJETIVO

> Quando algu√©m enviar uma **mensagem com uma palavra-chave** para o n√∫mero da **inst√¢ncia**, o sistema deve **identificar a palavra-chave** e **iniciar automaticamente o fluxo correspondente**.

---

### ‚úÖ CHECKLIST DO QUE PRECISA ESTAR CERTO

1. **A palavra-chave est√° cadastrada no banco de dados** junto com o ID do fluxo e o ID da inst√¢ncia?
2. A fun√ß√£o `processFlowsForInstance` est√° buscando essa palavra e executando o fluxo?
3. O `sendToWebhook()` est√° sendo chamado com os dados corretos para iniciar o fluxo?

---

### üöÄ EXEMPLO DE FLUXO AUTOM√ÅTICO (Fluxo B√°sico)

Vou te mostrar agora uma fun√ß√£o `processFlowsForInstance` funcional pra isso:

```ts
import { startFlow } from "./startFlow"; // Fun√ß√£o que inicia o fluxo
import { getFlowByKeyword } from "./db"; // Busca fluxo no banco

export async function processFlowsForInstance(instance, phoneNumber, messageText, sendToWebhook) {
  // Limpa o texto da mensagem
  const keyword = messageText.trim().toLowerCase();

  // Busca o fluxo com essa palavra-chave na inst√¢ncia
  const flow = await getFlowByKeyword(instance.id, keyword);

  if (!flow) {
    console.log(`Nenhum fluxo encontrado para a palavra-chave "${keyword}" na inst√¢ncia ${instance.name}`);
    return;
  }

  // Inicia o fluxo encontrado
  console.log(`Iniciando fluxo "${flow.name}" para ${phoneNumber}`);
  await startFlow(flow, phoneNumber, sendToWebhook);
}
```

---

### üß† O QUE `getFlowByKeyword` DEVE FAZER?

```ts
export async function getFlowByKeyword(instanceId, keyword) {
  return await db.flows.findFirst({
    where: {
      instanceId: instanceId,
      keyword: keyword
    }
  });
}
```

---

### üí• Fun√ß√£o `startFlow`

Aqui √© onde voc√™ dispara o webhook para enviar a primeira mensagem do fluxo:

```ts
export async function startFlow(flow, phoneNumber, sendToWebhook) {
  const steps = JSON.parse(flow.steps);

  if (!steps.length) return;

  // Envia a primeira etapa do fluxo
  const firstMessage = steps[0];

  await sendToWebhook({
    phone: phoneNumber,
    message: firstMessage.message,
    flowId: flow.id,
    step: 0
  });
}
```

---

### ‚úÖ Agora o fluxo ser√° iniciado quando:

- A **mensagem chegar**,
- A **palavra bater com alguma cadastrada**,
- E a **primeira mensagem for disparada** automaticamente.

---

Se quiser, me mostra:
- Como est√° sua fun√ß√£o `processFlowsForInstance` atual,
- Como voc√™ cadastrou os fluxos no banco (tabela, campos etc),
- E se tem algo personalizado que posso adaptar no c√≥digo.

T√¥ contigo at√© funcionar 100%. Bora! üîßüí¨